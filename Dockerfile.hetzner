# Multi-stage build for production
FROM node:20-bullseye as builder

# Install dependencies for native modules
RUN apt-get update && apt-get install -y \
    python3 make g++ pkg-config \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /usr/src/app

# Copy package files
COPY package*.json tsconfig*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci --include=dev --legacy-peer-deps

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Remove dev dependencies and clean npm cache
RUN npm prune --production && npm cache clean --force

# Production stage
FROM node:20-bullseye-slim

# Install curl for health checks
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /usr/src/app

# Copy production dependencies and built application
COPY --from=builder /usr/src/app/node_modules ./node_modules
COPY --from=builder /usr/src/app/dist ./dist
COPY --from=builder /usr/src/app/package.json ./

# Create necessary directories
RUN mkdir -p uploads logs

# Change ownership to node user
RUN chown -R node:node /usr/src/app

# Switch to node user
USER node

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8080/api/health || exit 1

# Start the application
CMD ["npm", "run", "start:prod"]