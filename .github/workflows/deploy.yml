name: Deploy to Google Cloud Run

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: backend-fastgrapher-service
  REGION: us-central1
  REPOSITORY: fastgrapher-repo
  IMAGE_NAME: fastgrapher-backend

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Build and Push Docker Image
        id: build
        run: |-
          # Use short SHA for tagging
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          FULL_IMAGE_URI="us-central1-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME:$SHORT_SHA"
          
          # Submit build without waiting for logs
          gcloud builds submit \
            --tag $FULL_IMAGE_URI \
            --quiet \
          
          # Get build ID and wait for completion
          BUILD_ID=$(gcloud builds list --filter "tags=$SHORT_SHA" --format="value(id)" --limit=1)
          echo "Waiting for build $BUILD_ID to complete..."
          gcloud builds wait $BUILD_ID --quiet
          
          # Verify build succeeded
          BUILD_STATUS=$(gcloud builds describe $BUILD_ID --format="value(status)")
          if [ "$BUILD_STATUS" != "SUCCESS" ]; then
            echo "Build failed with status: $BUILD_STATUS"
            exit 1
          fi
          
          echo "image_uri=$FULL_IMAGE_URI" >> $GITHUB_OUTPUT

      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy $SERVICE_NAME \
            --image ${{ steps.build.outputs.image_uri }} \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --cpu=1 \
            --memory=512Mi \
            --min-instances=1 \
            --max-instances=3