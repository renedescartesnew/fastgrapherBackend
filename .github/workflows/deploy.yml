
name: Deploy to Google Cloud Run

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: 'read'
  id-token: 'write'

env:
  PROJECT_ID: fastgrapher-backend-project
  SERVICE_NAME: fastgrapher-backend
  REGION: us-central1
  REPOSITORY: cloud-run-source-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/855571275325/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'github-actions-sa@fastgrapher-backend-project.iam.gserviceaccount.com'
          create_credentials_file: true

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Verify Dockerfile exists
        run: |
          if [ ! -f "Dockerfile" ]; then
            echo "::error::Dockerfile not found in repository root"
            exit 1
          fi
          echo "Dockerfile found - proceeding with build"

      - name: Build and Push Docker Image
        run: |
          # Verify/create Artifact Registry repository
          gcloud artifacts repositories describe $REPOSITORY \
            --location=$REGION \
            --project=$PROJECT_ID || \
          gcloud artifacts repositories create $REPOSITORY \
            --repository-format=docker \
            --location=$REGION \
            --project=$PROJECT_ID

          # Submit build without waiting for logs
          BUILD_OUTPUT=$(gcloud builds submit \
            --async \
            --tag $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$GITHUB_SHA \
            --project=$PROJECT_ID \
            --machine-type=E2_HIGHCPU_8 2>&1)
          
          # Extract build ID
          BUILD_ID=$(echo "$BUILD_OUTPUT" | grep -o 'builds/[a-f0-9-]*' | head -1 | cut -d'/' -f2)
          
          if [ -z "$BUILD_ID" ]; then
            echo "::error::Failed to submit build"
            echo "$BUILD_OUTPUT"
            exit 1
          fi
          
          echo "Build submitted with ID: $BUILD_ID"
          echo "View logs at: https://console.cloud.google.com/cloud-build/builds/$BUILD_ID?project=$PROJECT_ID"
          
          # Wait for build completion
          echo "Waiting for build to complete..."
          while true; do
            BUILD_STATUS=$(gcloud builds describe $BUILD_ID --project=$PROJECT_ID --format='value(status)')
            
            case $BUILD_STATUS in
              SUCCESS)
                echo "Build completed successfully"
                break
                ;;
              FAILURE|CANCELLED|TIMEOUT)
                echo "::error::Build failed with status: $BUILD_STATUS"
                exit 1
                ;;
              *)
                sleep 10
                ;;
            esac
          done
